var _user$project$Flashcards$shuffle = function (model) {
	var randomlist = _elm_lang$core$Basics$fst(
		A2(
			_elm_lang$core$Random$step,
			A2(
				_elm_lang$core$Random$list,
				_elm_lang$core$List$length(model.wordList),
				A2(_elm_lang$core$Random$int, 1, 100)),
			_elm_lang$core$Random$initialSeed(model.time)));
	var zippedList = A3(
		_elm_lang$core$List$map2,
		F2(
			function (v0, v1) {
				return {ctor: '_Tuple2', _0: v0, _1: v1};
			}),
		randomlist,
		model.wordList);
	var sorted = A2(_elm_lang$core$List$sortBy, _elm_lang$core$Basics$fst, zippedList);
	var unzipped = _elm_lang$core$Basics$snd(
		_elm_lang$core$List$unzip(sorted));
	return unzipped;
};
var _user$project$Flashcards$cycleCards = function (wList) {
	return A2(
		_elm_lang$core$Basics_ops['++'],
		A2(_elm_lang$core$List$drop, 1, wList),
		A2(_elm_lang$core$List$take, 1, wList));
};
var _user$project$Flashcards$getCardValue = function (item) {
	var _p0 = item;
	if (_p0.ctor === 'Just') {
		return _p0._0;
	} else {
		return {id: 0, word: 'error', definition: 'error', definiteArticle: '', numOfTimesInNT: 0, otherWordForms: ''};
	}
};
var _user$project$Flashcards$getNextWord = function (m) {
	return (_elm_lang$core$Native_Utils.cmp(
		_elm_lang$core$List$length(m.wordList),
		0) > 0) ? _user$project$Flashcards$getCardValue(
		_elm_lang$core$List$head(
			A2(_elm_lang$core$List$take, 1, m.wordList))) : {id: 0, word: 'error', definition: 'error', definiteArticle: '', numOfTimesInNT: 0, otherWordForms: ''};
};
var _user$project$Flashcards$Word = F6(
	function (a, b, c, d, e, f) {
		return {id: a, word: b, definition: c, definiteArticle: d, numOfTimesInNT: e, otherWordForms: f};
	});
var _user$project$Flashcards$decodeWord = A7(
	_elm_lang$core$Json_Decode$object6,
	_user$project$Flashcards$Word,
	A2(_elm_lang$core$Json_Decode_ops[':='], 'id', _elm_lang$core$Json_Decode$int),
	A2(_elm_lang$core$Json_Decode_ops[':='], 'word', _elm_lang$core$Json_Decode$string),
	A2(_elm_lang$core$Json_Decode_ops[':='], 'definition', _elm_lang$core$Json_Decode$string),
	A2(_elm_lang$core$Json_Decode_ops[':='], 'definiteArticle', _elm_lang$core$Json_Decode$string),
	A2(_elm_lang$core$Json_Decode_ops[':='], 'numOfTimesInNT', _elm_lang$core$Json_Decode$int),
	A2(_elm_lang$core$Json_Decode_ops[':='], 'otherWordForms', _elm_lang$core$Json_Decode$string));
var _user$project$Flashcards$decodeDataFile = A2(
	_elm_lang$core$Json_Decode_ops[':='],
	'data',
	_elm_lang$core$Json_Decode$list(_user$project$Flashcards$decodeWord));
var _user$project$Flashcards$Model = F5(
	function (a, b, c, d, e) {
		return {chapter: a, wordList: b, card: c, showDef: d, time: e};
	});
var _user$project$Flashcards$Tick = function (a) {
	return {ctor: 'Tick', _0: a};
};
var _user$project$Flashcards$subscriptions = function (model) {
	return A2(_elm_lang$core$Time$every, _elm_lang$core$Time$millisecond, _user$project$Flashcards$Tick);
};
var _user$project$Flashcards$Shuffle = {ctor: 'Shuffle'};
var _user$project$Flashcards$SetChapter = function (a) {
	return {ctor: 'SetChapter', _0: a};
};
var _user$project$Flashcards$FetchFail = function (a) {
	return {ctor: 'FetchFail', _0: a};
};
var _user$project$Flashcards$FetchSucceed = function (a) {
	return {ctor: 'FetchSucceed', _0: a};
};
var _user$project$Flashcards$getWordList = function (ch) {
	var url = A2(
		_elm_lang$core$Basics_ops['++'],
		'data/',
		A2(_elm_lang$core$Basics_ops['++'], ch, '.json'));
	return A3(
		_elm_lang$core$Task$perform,
		_user$project$Flashcards$FetchFail,
		_user$project$Flashcards$FetchSucceed,
		A2(_evancz$elm_http$Http$get, _user$project$Flashcards$decodeDataFile, url));
};
var _user$project$Flashcards$init = function (ch) {
	var model = {
		chapter: ch,
		wordList: _elm_lang$core$Native_List.fromArray(
			[]),
		card: {id: 0, word: '', definition: '', definiteArticle: '', numOfTimesInNT: 0, otherWordForms: ''},
		showDef: 'visible',
		time: 0
	};
	return {
		ctor: '_Tuple2',
		_0: model,
		_1: _user$project$Flashcards$getWordList(ch)
	};
};
var _user$project$Flashcards$update = F2(
	function (action, model) {
		var _p1 = action;
		switch (_p1.ctor) {
			case 'Next':
				var _p2 = _p1._0;
				if (_p2 === 'hidden') {
					return {
						ctor: '_Tuple2',
						_0: A5(_user$project$Flashcards$Model, model.chapter, model.wordList, model.card, 'visible', model.time),
						_1: _elm_lang$core$Platform_Cmd$none
					};
				} else {
					return {
						ctor: '_Tuple2',
						_0: A5(
							_user$project$Flashcards$Model,
							model.chapter,
							_user$project$Flashcards$cycleCards(model.wordList),
							_user$project$Flashcards$getNextWord(model),
							'hidden',
							model.time),
						_1: _elm_lang$core$Platform_Cmd$none
					};
				}
			case 'FetchSucceed':
				return {
					ctor: '_Tuple2',
					_0: A5(
						_user$project$Flashcards$Model,
						model.chapter,
						_user$project$Flashcards$shuffle(
							A5(_user$project$Flashcards$Model, model.chapter, _p1._0, model.card, 'hidden', model.time)),
						model.card,
						'visible',
						model.time),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'FetchFail':
				return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
			case 'SetChapter':
				var _p3 = _p1._0;
				return {
					ctor: '_Tuple2',
					_0: A5(
						_user$project$Flashcards$Model,
						_p3,
						model.wordList,
						{id: 0, word: '', definition: '', definiteArticle: '', numOfTimesInNT: 0, otherWordForms: ''},
						'visible',
						model.time),
					_1: _user$project$Flashcards$getWordList(_p3)
				};
			case 'Shuffle':
				return {
					ctor: '_Tuple2',
					_0: A5(
						_user$project$Flashcards$Model,
						model.chapter,
						_user$project$Flashcards$shuffle(model),
						model.card,
						model.showDef,
						model.time),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			default:
				return {
					ctor: '_Tuple2',
					_0: A5(
						_user$project$Flashcards$Model,
						model.chapter,
						model.wordList,
						model.card,
						model.showDef,
						_elm_lang$core$Basics$round(_p1._0)),
					_1: _elm_lang$core$Platform_Cmd$none
				};
		}
	});
var _user$project$Flashcards$Next = function (a) {
	return {ctor: 'Next', _0: a};
};
var _user$project$Flashcards$view = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		_elm_lang$core$Native_List.fromArray(
			[
				_elm_lang$html$Html_Attributes$class('mdl-layout mdl-js-layout mdl-layout--fixed-header mdl-layout--no-drawer-button')
			]),
		_elm_lang$core$Native_List.fromArray(
			[
				A2(
				_elm_lang$html$Html$header,
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html_Attributes$class('mdl-layout__header')
					]),
				_elm_lang$core$Native_List.fromArray(
					[
						A2(
						_elm_lang$html$Html$div,
						_elm_lang$core$Native_List.fromArray(
							[
								_elm_lang$html$Html_Attributes$class('mdl-layout__header-row')
							]),
						_elm_lang$core$Native_List.fromArray(
							[
								A2(
								_elm_lang$html$Html$span,
								_elm_lang$core$Native_List.fromArray(
									[
										_elm_lang$html$Html_Attributes$class('mdl-layout-title')
									]),
								_elm_lang$core$Native_List.fromArray(
									[
										_elm_lang$html$Html$text('Koine Greek ')
									])),
								A2(
								_elm_lang$html$Html$div,
								_elm_lang$core$Native_List.fromArray(
									[
										_elm_lang$html$Html_Attributes$class('mdl-layout-spacer')
									]),
								_elm_lang$core$Native_List.fromArray(
									[])),
								A2(
								_elm_lang$html$Html$nav,
								_elm_lang$core$Native_List.fromArray(
									[
										_elm_lang$html$Html_Attributes$class('mdl-navigation')
									]),
								_elm_lang$core$Native_List.fromArray(
									[
										A2(
										_elm_lang$html$Html$select,
										_elm_lang$core$Native_List.fromArray(
											[
												_elm_lang$html$Html_Events$onInput(_user$project$Flashcards$SetChapter)
											]),
										_elm_lang$core$Native_List.fromArray(
											[
												A2(
												_elm_lang$html$Html$optgroup,
												_elm_lang$core$Native_List.fromArray(
													[
														A2(_elm_lang$html$Html_Attributes$attribute, 'label', 'Grammar')
													]),
												_elm_lang$core$Native_List.fromArray(
													[
														A2(
														_elm_lang$html$Html$option,
														_elm_lang$core$Native_List.fromArray(
															[
																_elm_lang$html$Html_Attributes$value('nounRules')
															]),
														_elm_lang$core$Native_List.fromArray(
															[
																_elm_lang$html$Html$text('Noun Rules')
															])),
														A2(
														_elm_lang$html$Html$option,
														_elm_lang$core$Native_List.fromArray(
															[
																_elm_lang$html$Html_Attributes$value('nounEndings')
															]),
														_elm_lang$core$Native_List.fromArray(
															[
																_elm_lang$html$Html$text('Noun Endings')
															])),
														A2(
														_elm_lang$html$Html$option,
														_elm_lang$core$Native_List.fromArray(
															[
																_elm_lang$html$Html_Attributes$value('defArticle')
															]),
														_elm_lang$core$Native_List.fromArray(
															[
																_elm_lang$html$Html$text('Definite Article')
															])),
														A2(
														_elm_lang$html$Html$option,
														_elm_lang$core$Native_List.fromArray(
															[
																_elm_lang$html$Html_Attributes$value('pronouns')
															]),
														_elm_lang$core$Native_List.fromArray(
															[
																_elm_lang$html$Html$text('Pronouns')
															])),
														A2(
														_elm_lang$html$Html$option,
														_elm_lang$core$Native_List.fromArray(
															[
																_elm_lang$html$Html_Attributes$value('adjectives'),
																_elm_lang$html$Html_Attributes$disabled(true)
															]),
														_elm_lang$core$Native_List.fromArray(
															[
																_elm_lang$html$Html$text('Adjectives')
															])),
														A2(
														_elm_lang$html$Html$option,
														_elm_lang$core$Native_List.fromArray(
															[
																_elm_lang$html$Html_Attributes$value('verbRules'),
																_elm_lang$html$Html_Attributes$disabled(true)
															]),
														_elm_lang$core$Native_List.fromArray(
															[
																_elm_lang$html$Html$text('Verb Rules')
															])),
														A2(
														_elm_lang$html$Html$option,
														_elm_lang$core$Native_List.fromArray(
															[
																_elm_lang$html$Html_Attributes$value('εἰμί'),
																_elm_lang$html$Html_Attributes$disabled(true)
															]),
														_elm_lang$core$Native_List.fromArray(
															[
																_elm_lang$html$Html$text('εἰμί')
															]))
													])),
												A2(
												_elm_lang$html$Html$optgroup,
												_elm_lang$core$Native_List.fromArray(
													[
														A2(_elm_lang$html$Html_Attributes$attribute, 'label', 'Mounce Chapter Vocab')
													]),
												_elm_lang$core$Native_List.fromArray(
													[
														A2(
														_elm_lang$html$Html$option,
														_elm_lang$core$Native_List.fromArray(
															[
																_elm_lang$html$Html_Attributes$selected(true),
																_elm_lang$html$Html_Attributes$value('Ch4')
															]),
														_elm_lang$core$Native_List.fromArray(
															[
																_elm_lang$html$Html$text('Ch 4')
															])),
														A2(
														_elm_lang$html$Html$option,
														_elm_lang$core$Native_List.fromArray(
															[
																_elm_lang$html$Html_Attributes$value('Ch6')
															]),
														_elm_lang$core$Native_List.fromArray(
															[
																_elm_lang$html$Html$text('Ch 6')
															])),
														A2(
														_elm_lang$html$Html$option,
														_elm_lang$core$Native_List.fromArray(
															[
																_elm_lang$html$Html_Attributes$value('Ch7')
															]),
														_elm_lang$core$Native_List.fromArray(
															[
																_elm_lang$html$Html$text('Ch 7')
															])),
														A2(
														_elm_lang$html$Html$option,
														_elm_lang$core$Native_List.fromArray(
															[
																_elm_lang$html$Html_Attributes$value('Ch8')
															]),
														_elm_lang$core$Native_List.fromArray(
															[
																_elm_lang$html$Html$text('Ch 8')
															])),
														A2(
														_elm_lang$html$Html$option,
														_elm_lang$core$Native_List.fromArray(
															[
																_elm_lang$html$Html_Attributes$value('Ch9')
															]),
														_elm_lang$core$Native_List.fromArray(
															[
																_elm_lang$html$Html$text('Ch 9')
															])),
														A2(
														_elm_lang$html$Html$option,
														_elm_lang$core$Native_List.fromArray(
															[
																_elm_lang$html$Html_Attributes$value('Ch10')
															]),
														_elm_lang$core$Native_List.fromArray(
															[
																_elm_lang$html$Html$text('Ch 10')
															])),
														A2(
														_elm_lang$html$Html$option,
														_elm_lang$core$Native_List.fromArray(
															[
																_elm_lang$html$Html_Attributes$value('Ch11')
															]),
														_elm_lang$core$Native_List.fromArray(
															[
																_elm_lang$html$Html$text('Ch 11')
															])),
														A2(
														_elm_lang$html$Html$option,
														_elm_lang$core$Native_List.fromArray(
															[
																_elm_lang$html$Html_Attributes$value('Ch12')
															]),
														_elm_lang$core$Native_List.fromArray(
															[
																_elm_lang$html$Html$text('Ch 12')
															])),
														A2(
														_elm_lang$html$Html$option,
														_elm_lang$core$Native_List.fromArray(
															[
																_elm_lang$html$Html_Attributes$value('Ch13')
															]),
														_elm_lang$core$Native_List.fromArray(
															[
																_elm_lang$html$Html$text('Ch 13')
															])),
														A2(
														_elm_lang$html$Html$option,
														_elm_lang$core$Native_List.fromArray(
															[
																_elm_lang$html$Html_Attributes$value('Ch14')
															]),
														_elm_lang$core$Native_List.fromArray(
															[
																_elm_lang$html$Html$text('Ch 14')
															])),
														A2(
														_elm_lang$html$Html$option,
														_elm_lang$core$Native_List.fromArray(
															[
																_elm_lang$html$Html_Attributes$value('Ch16')
															]),
														_elm_lang$core$Native_List.fromArray(
															[
																_elm_lang$html$Html$text('Ch 16')
															])),
														A2(
														_elm_lang$html$Html$option,
														_elm_lang$core$Native_List.fromArray(
															[
																_elm_lang$html$Html_Attributes$value('Ch17')
															]),
														_elm_lang$core$Native_List.fromArray(
															[
																_elm_lang$html$Html$text('Ch 17')
															])),
														A2(
														_elm_lang$html$Html$option,
														_elm_lang$core$Native_List.fromArray(
															[
																_elm_lang$html$Html_Attributes$value('Ch18')
															]),
														_elm_lang$core$Native_List.fromArray(
															[
																_elm_lang$html$Html$text('Ch 18')
															])),
														A2(
														_elm_lang$html$Html$option,
														_elm_lang$core$Native_List.fromArray(
															[
																_elm_lang$html$Html_Attributes$value('Ch19')
															]),
														_elm_lang$core$Native_List.fromArray(
															[
																_elm_lang$html$Html$text('Ch 19')
															])),
														A2(
														_elm_lang$html$Html$option,
														_elm_lang$core$Native_List.fromArray(
															[
																_elm_lang$html$Html_Attributes$value('Ch20')
															]),
														_elm_lang$core$Native_List.fromArray(
															[
																_elm_lang$html$Html$text('Ch 20')
															])),
														A2(
														_elm_lang$html$Html$option,
														_elm_lang$core$Native_List.fromArray(
															[
																_elm_lang$html$Html_Attributes$value('Ch21')
															]),
														_elm_lang$core$Native_List.fromArray(
															[
																_elm_lang$html$Html$text('Ch 21')
															])),
														A2(
														_elm_lang$html$Html$option,
														_elm_lang$core$Native_List.fromArray(
															[
																_elm_lang$html$Html_Attributes$value('Ch22')
															]),
														_elm_lang$core$Native_List.fromArray(
															[
																_elm_lang$html$Html$text('Ch 22')
															])),
														A2(
														_elm_lang$html$Html$option,
														_elm_lang$core$Native_List.fromArray(
															[
																_elm_lang$html$Html_Attributes$value('Ch23')
															]),
														_elm_lang$core$Native_List.fromArray(
															[
																_elm_lang$html$Html$text('Ch 23')
															])),
														A2(
														_elm_lang$html$Html$option,
														_elm_lang$core$Native_List.fromArray(
															[
																_elm_lang$html$Html_Attributes$value('Ch24')
															]),
														_elm_lang$core$Native_List.fromArray(
															[
																_elm_lang$html$Html$text('Ch 24')
															])),
														A2(
														_elm_lang$html$Html$option,
														_elm_lang$core$Native_List.fromArray(
															[
																_elm_lang$html$Html_Attributes$value('Ch25')
															]),
														_elm_lang$core$Native_List.fromArray(
															[
																_elm_lang$html$Html$text('Ch 25')
															])),
														A2(
														_elm_lang$html$Html$option,
														_elm_lang$core$Native_List.fromArray(
															[
																_elm_lang$html$Html_Attributes$value('Ch27')
															]),
														_elm_lang$core$Native_List.fromArray(
															[
																_elm_lang$html$Html$text('Ch 27')
															])),
														A2(
														_elm_lang$html$Html$option,
														_elm_lang$core$Native_List.fromArray(
															[
																_elm_lang$html$Html_Attributes$value('Ch28')
															]),
														_elm_lang$core$Native_List.fromArray(
															[
																_elm_lang$html$Html$text('Ch 28')
															])),
														A2(
														_elm_lang$html$Html$option,
														_elm_lang$core$Native_List.fromArray(
															[
																_elm_lang$html$Html_Attributes$value('Ch29')
															]),
														_elm_lang$core$Native_List.fromArray(
															[
																_elm_lang$html$Html$text('Ch 29')
															])),
														A2(
														_elm_lang$html$Html$option,
														_elm_lang$core$Native_List.fromArray(
															[
																_elm_lang$html$Html_Attributes$value('Ch30-35')
															]),
														_elm_lang$core$Native_List.fromArray(
															[
																_elm_lang$html$Html$text('Ch 30-35')
															])),
														A2(
														_elm_lang$html$Html$option,
														_elm_lang$core$Native_List.fromArray(
															[
																_elm_lang$html$Html_Attributes$value('Additional')
															]),
														_elm_lang$core$Native_List.fromArray(
															[
																_elm_lang$html$Html$text('Additional')
															]))
													]))
											]))
									]))
							]))
					])),
				A2(
				_elm_lang$html$Html$div,
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html_Attributes$class('mdl-layout__drawer')
					]),
				_elm_lang$core$Native_List.fromArray(
					[
						A2(
						_elm_lang$html$Html$span,
						_elm_lang$core$Native_List.fromArray(
							[
								_elm_lang$html$Html_Attributes$class('mdl-layout-title')
							]),
						_elm_lang$core$Native_List.fromArray(
							[
								_elm_lang$html$Html$text(model.chapter)
							])),
						A2(
						_elm_lang$html$Html$nav,
						_elm_lang$core$Native_List.fromArray(
							[
								_elm_lang$html$Html_Attributes$class('mdl-navigation')
							]),
						_elm_lang$core$Native_List.fromArray(
							[
								A2(
								_elm_lang$html$Html$a,
								_elm_lang$core$Native_List.fromArray(
									[
										_elm_lang$html$Html_Attributes$class('mdl-navigation__link'),
										_elm_lang$html$Html_Attributes$href('')
									]),
								_elm_lang$core$Native_List.fromArray(
									[
										_elm_lang$html$Html$text('tesdf')
									]))
							]))
					])),
				A2(
				_elm_lang$html$Html$main$,
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html_Attributes$class('mdl-layout__content'),
						_user$project$MyStyles$backdrop
					]),
				_elm_lang$core$Native_List.fromArray(
					[
						A2(
						_elm_lang$html$Html$div,
						_elm_lang$core$Native_List.fromArray(
							[
								_elm_lang$html$Html_Attributes$class('page-content')
							]),
						_elm_lang$core$Native_List.fromArray(
							[
								A2(
								_elm_lang$html$Html$div,
								_elm_lang$core$Native_List.fromArray(
									[
										_elm_lang$html$Html_Attributes$class('mdl-card mdl-shadow--2dp'),
										_user$project$MyStyles$flashcard
									]),
								_elm_lang$core$Native_List.fromArray(
									[
										A2(
										_elm_lang$html$Html$div,
										_elm_lang$core$Native_List.fromArray(
											[
												_elm_lang$html$Html_Attributes$class('mdl-card__title'),
												_user$project$MyStyles$textCenter
											]),
										_elm_lang$core$Native_List.fromArray(
											[
												A2(
												_elm_lang$html$Html$h2,
												_elm_lang$core$Native_List.fromArray(
													[_user$project$MyStyles$textCenter]),
												_elm_lang$core$Native_List.fromArray(
													[
														_elm_lang$html$Html$text(model.card.word)
													]))
											])),
										A2(
										_elm_lang$html$Html$div,
										_elm_lang$core$Native_List.fromArray(
											[
												_elm_lang$html$Html_Attributes$class('mdl-card__supporting-text'),
												_user$project$MyStyles$textCenter
											]),
										_elm_lang$core$Native_List.fromArray(
											[
												A2(
												_elm_lang$html$Html$h3,
												_elm_lang$core$Native_List.fromArray(
													[
														_user$project$MyStyles$textCenter,
														_elm_lang$html$Html_Attributes$style(
														_elm_lang$core$Native_List.fromArray(
															[
																{ctor: '_Tuple2', _0: 'visibility', _1: model.showDef}
															]))
													]),
												_elm_lang$core$Native_List.fromArray(
													[
														_elm_lang$html$Html$text(model.card.definition)
													])),
												A2(
												_elm_lang$html$Html$h3,
												_elm_lang$core$Native_List.fromArray(
													[
														_user$project$MyStyles$textCenter,
														_elm_lang$html$Html_Attributes$style(
														_elm_lang$core$Native_List.fromArray(
															[
																{ctor: '_Tuple2', _0: 'visibility', _1: model.showDef}
															]))
													]),
												_elm_lang$core$Native_List.fromArray(
													[
														_elm_lang$html$Html$text(model.card.definiteArticle)
													])),
												A2(
												_elm_lang$html$Html$h3,
												_elm_lang$core$Native_List.fromArray(
													[
														_user$project$MyStyles$textCenter,
														_elm_lang$html$Html_Attributes$style(
														_elm_lang$core$Native_List.fromArray(
															[
																{ctor: '_Tuple2', _0: 'visibility', _1: model.showDef}
															]))
													]),
												_elm_lang$core$Native_List.fromArray(
													[
														_elm_lang$html$Html$text(model.card.otherWordForms)
													]))
											]))
									])),
								A2(
								_elm_lang$html$Html$div,
								_elm_lang$core$Native_List.fromArray(
									[
										_elm_lang$html$Html_Attributes$class('mdl-grid')
									]),
								_elm_lang$core$Native_List.fromArray(
									[
										A2(
										_elm_lang$html$Html$div,
										_elm_lang$core$Native_List.fromArray(
											[
												_elm_lang$html$Html_Attributes$class('mdl-cell mdl-cell--6-col-desktop mdl-cell--4-col-tablet mdl-cell--2-col-phone'),
												_user$project$MyStyles$textCenter
											]),
										_elm_lang$core$Native_List.fromArray(
											[
												A2(
												_elm_lang$html$Html$button,
												_elm_lang$core$Native_List.fromArray(
													[
														_elm_lang$html$Html_Attributes$class('mdl-button mdl-js-button mdl-button--raised mdl-button--colored'),
														_elm_lang$html$Html_Events$onClick(_user$project$Flashcards$Shuffle)
													]),
												_elm_lang$core$Native_List.fromArray(
													[
														_elm_lang$html$Html$text('Shuffle')
													]))
											])),
										A2(
										_elm_lang$html$Html$div,
										_elm_lang$core$Native_List.fromArray(
											[
												_elm_lang$html$Html_Attributes$class('mdl-cell mdl-cell--6-col-desktop mdl-cell--4-col-tablet mdl-cell--2-col-phone'),
												_user$project$MyStyles$textCenter
											]),
										_elm_lang$core$Native_List.fromArray(
											[
												A2(
												_elm_lang$html$Html$button,
												_elm_lang$core$Native_List.fromArray(
													[
														_elm_lang$html$Html_Attributes$class('mdl-button mdl-js-button mdl-button--raised mdl-button--colored'),
														_elm_lang$html$Html_Events$onClick(
														_user$project$Flashcards$Next(model.showDef))
													]),
												_elm_lang$core$Native_List.fromArray(
													[
														_elm_lang$html$Html$text('Next Word')
													]))
											]))
									]))
							]))
					]))
			]));
};
var _user$project$Flashcards$main = {
	main: _elm_lang$html$Html_App$program(
		{
			init: _user$project$Flashcards$init('Ch4'),
			view: _user$project$Flashcards$view,
			update: _user$project$Flashcards$update,
			subscriptions: _user$project$Flashcards$subscriptions
		})
};
